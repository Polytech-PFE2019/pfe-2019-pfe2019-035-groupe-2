[{
						"id": "eac2019f.020101",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010101",
						"x": 120,
						"y": 60,
						"wires": [["eac2019f.090101"]]
					}, {
						"id": "eac2019f.030101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1280,
						"y": 20,
						"wires": []
					}, {
						"id": "eac2019f.040101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1280,
						"y": 60,
						"wires": []
					}, {
						"id": "eac2019f.050101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1290,
						"y": 100,
						"wires": []
					}, {
						"id": "eac2019f.060101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 20,
						"wires": [["eac2019f.030101"]]
					}, {
						"id": "eac2019f.070101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 60,
						"wires": [["eac2019f.040101"]]
					}, {
						"id": "eac2019f.080101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 100,
						"wires": [["eac2019f.050101"]]
					}, {
						"id": "eac2019f.090101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 60,
						"wires": [["eac2019f.060101", "eac2019f.070101", "eac2019f.080101"]]
					}, {
						"id": "eac2019f.010101",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.101",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020102",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010102",
						"x": 120,
						"y": 180,
						"wires": [["eac2019f.090102"]]
					}, {
						"id": "eac2019f.030102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1280,
						"y": 140,
						"wires": []
					}, {
						"id": "eac2019f.040102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1280,
						"y": 180,
						"wires": []
					}, {
						"id": "eac2019f.050102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1290,
						"y": 220,
						"wires": []
					}, {
						"id": "eac2019f.060102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 140,
						"wires": [["eac2019f.030102"]]
					}, {
						"id": "eac2019f.070102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 180,
						"wires": [["eac2019f.040102"]]
					}, {
						"id": "eac2019f.080102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 220,
						"wires": [["eac2019f.050102"]]
					}, {
						"id": "eac2019f.090102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 180,
						"wires": [["eac2019f.060102", "eac2019f.070102", "eac2019f.080102"]]
					}, {
						"id": "eac2019f.010102",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.102",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020103",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010103",
						"x": 120,
						"y": 300,
						"wires": [["eac2019f.090103"]]
					}, {
						"id": "eac2019f.030103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1280,
						"y": 260,
						"wires": []
					}, {
						"id": "eac2019f.040103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1280,
						"y": 300,
						"wires": []
					}, {
						"id": "eac2019f.050103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1290,
						"y": 340,
						"wires": []
					}, {
						"id": "eac2019f.060103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 260,
						"wires": [["eac2019f.030103"]]
					}, {
						"id": "eac2019f.070103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 300,
						"wires": [["eac2019f.040103"]]
					}, {
						"id": "eac2019f.080103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 340,
						"wires": [["eac2019f.050103"]]
					}, {
						"id": "eac2019f.090103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 300,
						"wires": [["eac2019f.060103", "eac2019f.070103", "eac2019f.080103"]]
					}, {
						"id": "eac2019f.010103",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.103",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020104",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010104",
						"x": 120,
						"y": 420,
						"wires": [["eac2019f.090104"]]
					}, {
						"id": "eac2019f.030104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1280,
						"y": 380,
						"wires": []
					}, {
						"id": "eac2019f.040104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1280,
						"y": 420,
						"wires": []
					}, {
						"id": "eac2019f.050104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1290,
						"y": 460,
						"wires": []
					}, {
						"id": "eac2019f.060104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 380,
						"wires": [["eac2019f.030104"]]
					}, {
						"id": "eac2019f.070104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 420,
						"wires": [["eac2019f.040104"]]
					}, {
						"id": "eac2019f.080104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 460,
						"wires": [["eac2019f.050104"]]
					}, {
						"id": "eac2019f.090104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 420,
						"wires": [["eac2019f.060104", "eac2019f.070104", "eac2019f.080104"]]
					}, {
						"id": "eac2019f.010104",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.104",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020105",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 105 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010105",
						"x": 120,
						"y": 540,
						"wires": [["eac2019f.090105"]]
					}, {
						"id": "eac2019f.030105",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 105 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010105",
						"x": 1280,
						"y": 500,
						"wires": []
					}, {
						"id": "eac2019f.040105",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 105 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010105",
						"x": 1280,
						"y": 540,
						"wires": []
					}, {
						"id": "eac2019f.050105",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 105 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010105",
						"x": 1290,
						"y": 580,
						"wires": []
					}, {
						"id": "eac2019f.060105",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 500,
						"wires": [["eac2019f.030105"]]
					}, {
						"id": "eac2019f.070105",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 540,
						"wires": [["eac2019f.040105"]]
					}, {
						"id": "eac2019f.080105",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 580,
						"wires": [["eac2019f.050105"]]
					}, {
						"id": "eac2019f.090105",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 540,
						"wires": [["eac2019f.060105", "eac2019f.070105", "eac2019f.080105"]]
					}, {
						"id": "eac2019f.010105",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.105",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020106",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 106 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010106",
						"x": 120,
						"y": 660,
						"wires": [["eac2019f.090106"]]
					}, {
						"id": "eac2019f.030106",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 106 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010106",
						"x": 1280,
						"y": 620,
						"wires": []
					}, {
						"id": "eac2019f.040106",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 106 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010106",
						"x": 1280,
						"y": 660,
						"wires": []
					}, {
						"id": "eac2019f.050106",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 106 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010106",
						"x": 1290,
						"y": 700,
						"wires": []
					}, {
						"id": "eac2019f.060106",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 620,
						"wires": [["eac2019f.030106"]]
					}, {
						"id": "eac2019f.070106",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 660,
						"wires": [["eac2019f.040106"]]
					}, {
						"id": "eac2019f.080106",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 700,
						"wires": [["eac2019f.050106"]]
					}, {
						"id": "eac2019f.090106",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 660,
						"wires": [["eac2019f.060106", "eac2019f.070106", "eac2019f.080106"]]
					}, {
						"id": "eac2019f.010106",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.106",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020107",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 107 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010107",
						"x": 120,
						"y": 780,
						"wires": [["eac2019f.090107"]]
					}, {
						"id": "eac2019f.030107",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 107 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010107",
						"x": 1280,
						"y": 740,
						"wires": []
					}, {
						"id": "eac2019f.040107",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 107 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010107",
						"x": 1280,
						"y": 780,
						"wires": []
					}, {
						"id": "eac2019f.050107",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 107 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010107",
						"x": 1290,
						"y": 820,
						"wires": []
					}, {
						"id": "eac2019f.060107",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 740,
						"wires": [["eac2019f.030107"]]
					}, {
						"id": "eac2019f.070107",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 780,
						"wires": [["eac2019f.040107"]]
					}, {
						"id": "eac2019f.080107",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 820,
						"wires": [["eac2019f.050107"]]
					}, {
						"id": "eac2019f.090107",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 780,
						"wires": [["eac2019f.060107", "eac2019f.070107", "eac2019f.080107"]]
					}, {
						"id": "eac2019f.010107",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.107",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020108",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 108 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010108",
						"x": 120,
						"y": 900,
						"wires": [["eac2019f.090108"]]
					}, {
						"id": "eac2019f.030108",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 108 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010108",
						"x": 1280,
						"y": 860,
						"wires": []
					}, {
						"id": "eac2019f.040108",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 108 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010108",
						"x": 1280,
						"y": 900,
						"wires": []
					}, {
						"id": "eac2019f.050108",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 108 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010108",
						"x": 1290,
						"y": 940,
						"wires": []
					}, {
						"id": "eac2019f.060108",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 860,
						"wires": [["eac2019f.030108"]]
					}, {
						"id": "eac2019f.070108",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 900,
						"wires": [["eac2019f.040108"]]
					}, {
						"id": "eac2019f.080108",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 940,
						"wires": [["eac2019f.050108"]]
					}, {
						"id": "eac2019f.090108",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 900,
						"wires": [["eac2019f.060108", "eac2019f.070108", "eac2019f.080108"]]
					}, {
						"id": "eac2019f.010108",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.108",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020109",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 109 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010109",
						"x": 120,
						"y": 1020,
						"wires": [["eac2019f.090109"]]
					}, {
						"id": "eac2019f.030109",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 109 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010109",
						"x": 1280,
						"y": 980,
						"wires": []
					}, {
						"id": "eac2019f.040109",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 109 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010109",
						"x": 1280,
						"y": 1020,
						"wires": []
					}, {
						"id": "eac2019f.050109",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 109 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010109",
						"x": 1290,
						"y": 1060,
						"wires": []
					}, {
						"id": "eac2019f.060109",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 980,
						"wires": [["eac2019f.030109"]]
					}, {
						"id": "eac2019f.070109",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1020,
						"wires": [["eac2019f.040109"]]
					}, {
						"id": "eac2019f.080109",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1060,
						"wires": [["eac2019f.050109"]]
					}, {
						"id": "eac2019f.090109",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1020,
						"wires": [["eac2019f.060109", "eac2019f.070109", "eac2019f.080109"]]
					}, {
						"id": "eac2019f.010109",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.109",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020110",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 110 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010110",
						"x": 120,
						"y": 1140,
						"wires": [["eac2019f.090110"]]
					}, {
						"id": "eac2019f.030110",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 110 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010110",
						"x": 1280,
						"y": 1100,
						"wires": []
					}, {
						"id": "eac2019f.040110",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 110 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010110",
						"x": 1280,
						"y": 1140,
						"wires": []
					}, {
						"id": "eac2019f.050110",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 110 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010110",
						"x": 1290,
						"y": 1180,
						"wires": []
					}, {
						"id": "eac2019f.060110",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1100,
						"wires": [["eac2019f.030110"]]
					}, {
						"id": "eac2019f.070110",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1140,
						"wires": [["eac2019f.040110"]]
					}, {
						"id": "eac2019f.080110",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1180,
						"wires": [["eac2019f.050110"]]
					}, {
						"id": "eac2019f.090110",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1140,
						"wires": [["eac2019f.060110", "eac2019f.070110", "eac2019f.080110"]]
					}, {
						"id": "eac2019f.010110",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.110",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020111",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 111 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010111",
						"x": 120,
						"y": 1260,
						"wires": [["eac2019f.090111"]]
					}, {
						"id": "eac2019f.030111",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 111 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010111",
						"x": 1280,
						"y": 1220,
						"wires": []
					}, {
						"id": "eac2019f.040111",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 111 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010111",
						"x": 1280,
						"y": 1260,
						"wires": []
					}, {
						"id": "eac2019f.050111",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 111 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010111",
						"x": 1290,
						"y": 1300,
						"wires": []
					}, {
						"id": "eac2019f.060111",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1220,
						"wires": [["eac2019f.030111"]]
					}, {
						"id": "eac2019f.070111",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1260,
						"wires": [["eac2019f.040111"]]
					}, {
						"id": "eac2019f.080111",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1300,
						"wires": [["eac2019f.050111"]]
					}, {
						"id": "eac2019f.090111",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1260,
						"wires": [["eac2019f.060111", "eac2019f.070111", "eac2019f.080111"]]
					}, {
						"id": "eac2019f.010111",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.111",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020112",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 112 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010112",
						"x": 120,
						"y": 1380,
						"wires": [["eac2019f.090112"]]
					}, {
						"id": "eac2019f.030112",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 112 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010112",
						"x": 1280,
						"y": 1340,
						"wires": []
					}, {
						"id": "eac2019f.040112",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 112 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010112",
						"x": 1280,
						"y": 1380,
						"wires": []
					}, {
						"id": "eac2019f.050112",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 112 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010112",
						"x": 1290,
						"y": 1420,
						"wires": []
					}, {
						"id": "eac2019f.060112",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1340,
						"wires": [["eac2019f.030112"]]
					}, {
						"id": "eac2019f.070112",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1380,
						"wires": [["eac2019f.040112"]]
					}, {
						"id": "eac2019f.080112",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1420,
						"wires": [["eac2019f.050112"]]
					}, {
						"id": "eac2019f.090112",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1380,
						"wires": [["eac2019f.060112", "eac2019f.070112", "eac2019f.080112"]]
					}, {
						"id": "eac2019f.010112",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.112",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020113",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 113 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010113",
						"x": 120,
						"y": 1500,
						"wires": [["eac2019f.090113"]]
					}, {
						"id": "eac2019f.030113",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 113 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010113",
						"x": 1280,
						"y": 1460,
						"wires": []
					}, {
						"id": "eac2019f.040113",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 113 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010113",
						"x": 1280,
						"y": 1500,
						"wires": []
					}, {
						"id": "eac2019f.050113",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 113 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010113",
						"x": 1290,
						"y": 1540,
						"wires": []
					}, {
						"id": "eac2019f.060113",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1460,
						"wires": [["eac2019f.030113"]]
					}, {
						"id": "eac2019f.070113",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1500,
						"wires": [["eac2019f.040113"]]
					}, {
						"id": "eac2019f.080113",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1540,
						"wires": [["eac2019f.050113"]]
					}, {
						"id": "eac2019f.090113",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1500,
						"wires": [["eac2019f.060113", "eac2019f.070113", "eac2019f.080113"]]
					}, {
						"id": "eac2019f.010113",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.113",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020114",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 114 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010114",
						"x": 120,
						"y": 1620,
						"wires": [["eac2019f.090114"]]
					}, {
						"id": "eac2019f.030114",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 114 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010114",
						"x": 1280,
						"y": 1580,
						"wires": []
					}, {
						"id": "eac2019f.040114",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 114 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010114",
						"x": 1280,
						"y": 1620,
						"wires": []
					}, {
						"id": "eac2019f.050114",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 114 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010114",
						"x": 1290,
						"y": 1660,
						"wires": []
					}, {
						"id": "eac2019f.060114",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1580,
						"wires": [["eac2019f.030114"]]
					}, {
						"id": "eac2019f.070114",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1620,
						"wires": [["eac2019f.040114"]]
					}, {
						"id": "eac2019f.080114",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1660,
						"wires": [["eac2019f.050114"]]
					}, {
						"id": "eac2019f.090114",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1620,
						"wires": [["eac2019f.060114", "eac2019f.070114", "eac2019f.080114"]]
					}, {
						"id": "eac2019f.010114",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.114",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020115",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 115 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010115",
						"x": 120,
						"y": 1740,
						"wires": [["eac2019f.090115"]]
					}, {
						"id": "eac2019f.030115",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 115 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010115",
						"x": 1280,
						"y": 1700,
						"wires": []
					}, {
						"id": "eac2019f.040115",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 115 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010115",
						"x": 1280,
						"y": 1740,
						"wires": []
					}, {
						"id": "eac2019f.050115",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 115 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010115",
						"x": 1290,
						"y": 1780,
						"wires": []
					}, {
						"id": "eac2019f.060115",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1700,
						"wires": [["eac2019f.030115"]]
					}, {
						"id": "eac2019f.070115",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1740,
						"wires": [["eac2019f.040115"]]
					}, {
						"id": "eac2019f.080115",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1780,
						"wires": [["eac2019f.050115"]]
					}, {
						"id": "eac2019f.090115",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1740,
						"wires": [["eac2019f.060115", "eac2019f.070115", "eac2019f.080115"]]
					}, {
						"id": "eac2019f.010115",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.115",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020116",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 116 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010116",
						"x": 120,
						"y": 1860,
						"wires": [["eac2019f.090116"]]
					}, {
						"id": "eac2019f.030116",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 116 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010116",
						"x": 1280,
						"y": 1820,
						"wires": []
					}, {
						"id": "eac2019f.040116",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 116 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010116",
						"x": 1280,
						"y": 1860,
						"wires": []
					}, {
						"id": "eac2019f.050116",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 116 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010116",
						"x": 1290,
						"y": 1900,
						"wires": []
					}, {
						"id": "eac2019f.060116",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1820,
						"wires": [["eac2019f.030116"]]
					}, {
						"id": "eac2019f.070116",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    return null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 1860,
						"wires": [["eac2019f.040116"]]
					}, {
						"id": "eac2019f.080116",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 1900,
						"wires": [["eac2019f.050116"]]
					}, {
						"id": "eac2019f.090116",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 1860,
						"wires": [["eac2019f.060116", "eac2019f.070116", "eac2019f.080116"]]
					}, {
						"id": "eac2019f.010116",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.116",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}]
