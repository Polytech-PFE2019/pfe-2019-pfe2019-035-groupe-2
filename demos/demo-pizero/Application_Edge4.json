[{
						"id": "eac2019f.020101",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010101",
						"x": 120,
						"y": 60,
						"wires": [["eac2019f.090101"]]
					}, {
						"id": "eac2019f.030101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1280,
						"y": 20,
						"wires": []
					}, {
						"id": "eac2019f.040101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1280,
						"y": 60,
						"wires": []
					}, {
						"id": "eac2019f.050101",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 101 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010101",
						"x": 1290,
						"y": 100,
						"wires": []
					}, {
						"id": "eac2019f.060101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 20,
						"wires": [["eac2019f.030101"]]
					}, {
						"id": "eac2019f.070101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    msg.payload = null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 60,
						"wires": [["eac2019f.040101"]]
					}, {
						"id": "eac2019f.080101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 100,
						"wires": [["eac2019f.050101"]]
					}, {
						"id": "eac2019f.090101",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 60,
						"wires": [["eac2019f.060101", "eac2019f.070101", "eac2019f.080101"]]
					}, {
						"id": "eac2019f.010101",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.101",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020102",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010102",
						"x": 120,
						"y": 180,
						"wires": [["eac2019f.090102"]]
					}, {
						"id": "eac2019f.030102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1280,
						"y": 140,
						"wires": []
					}, {
						"id": "eac2019f.040102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1280,
						"y": 180,
						"wires": []
					}, {
						"id": "eac2019f.050102",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 102 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010102",
						"x": 1290,
						"y": 220,
						"wires": []
					}, {
						"id": "eac2019f.060102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 140,
						"wires": [["eac2019f.030102"]]
					}, {
						"id": "eac2019f.070102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    msg.payload = null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 180,
						"wires": [["eac2019f.040102"]]
					}, {
						"id": "eac2019f.080102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 220,
						"wires": [["eac2019f.050102"]]
					}, {
						"id": "eac2019f.090102",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 180,
						"wires": [["eac2019f.060102", "eac2019f.070102", "eac2019f.080102"]]
					}, {
						"id": "eac2019f.010102",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.102",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020103",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010103",
						"x": 120,
						"y": 300,
						"wires": [["eac2019f.090103"]]
					}, {
						"id": "eac2019f.030103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1280,
						"y": 260,
						"wires": []
					}, {
						"id": "eac2019f.040103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1280,
						"y": 300,
						"wires": []
					}, {
						"id": "eac2019f.050103",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 103 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010103",
						"x": 1290,
						"y": 340,
						"wires": []
					}, {
						"id": "eac2019f.060103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 260,
						"wires": [["eac2019f.030103"]]
					}, {
						"id": "eac2019f.070103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    msg.payload = null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 300,
						"wires": [["eac2019f.040103"]]
					}, {
						"id": "eac2019f.080103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 340,
						"wires": [["eac2019f.050103"]]
					}, {
						"id": "eac2019f.090103",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 300,
						"wires": [["eac2019f.060103", "eac2019f.070103", "eac2019f.080103"]]
					}, {
						"id": "eac2019f.010103",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.103",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}, {
						"id": "eac2019f.020104",
						"type": "mqtt in",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Button",
						"topic": "/grove/button",
						"qos": "2",
						"datatype": "auto",
						"broker": "eac2019f.010104",
						"x": 120,
						"y": 420,
						"wires": [["eac2019f.090104"]]
					}, {
						"id": "eac2019f.030104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Led",
						"topic": "/grove/button_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1280,
						"y": 380,
						"wires": []
					}, {
						"id": "eac2019f.040104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 RGB",
						"topic": "/grove/rgb_led",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1280,
						"y": 420,
						"wires": []
					}, {
						"id": "eac2019f.050104",
						"type": "mqtt out",
						"z": "eac2019f.000000",
						"name": "RpiZ 104 Display",
						"topic": "/grove/4digit_display",
						"qos": "",
						"retain": "",
						"broker": "eac2019f.010104",
						"x": 1290,
						"y": 460,
						"wires": []
					}, {
						"id": "eac2019f.060104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Emit ValBool",
						"func": "msg.payload = msg.payload.button === 0 ? true : false;\n\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 380,
						"wires": [["eac2019f.030104"]]
					}, {
						"id": "eac2019f.070104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "ToRGB",
						"func": "try {\n    on = parseInt(msg.payload.rgbLed.on);\n    val = parseInt(msg.payload.rgbLed.val);\n    if (msg.payload.button === 0) {\n        on_new = (on + 1) % 2;\n    msg.payload = { 'on': on_new, 'val': val }\n    } else {\n        on_new = on;\n    msg.payload = null;\n    }\n} catch (error) {\n    val = msg.payload;\n}\n\nreturn msg;\n",
						"outputs": 1,
						"noerr": 0,
						"x": 440,
						"y": 420,
						"wires": [["eac2019f.040104"]]
					}, {
						"id": "eac2019f.080104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "Incr counter",
						"func": "try {\n    val = parseInt(msg.payload.display);\n} catch (error) {\n    val = msg.payload;\n}\n\nif (msg.payload.button === 0) {\n    msg.payload = val + 1;\n    return msg;\n}",
						"outputs": 1,
						"noerr": 0,
						"x": 430,
						"y": 460,
						"wires": [["eac2019f.050104"]]
					}, {
						"id": "eac2019f.090104",
						"type": "function",
						"z": "eac2019f.000000",
						"name": "toObj",
						"func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
						"outputs": 1,
						"noerr": 0,
						"x": 270,
						"y": 420,
						"wires": [["eac2019f.060104", "eac2019f.070104", "eac2019f.080104"]]
					}, {
						"id": "eac2019f.010104",
						"type": "mqtt-broker",
						"z": "eac2019f.000000",
						"name": "",
						"broker": "192.168.43.104",
						"port": "1883",
						"clientid": "",
						"usetls": false,
						"compatmode": true,
						"keepalive": "60",
						"cleansession": true,
						"birthTopic": "",
						"birthQos": "0",
						"birthPayload": "",
						"closeTopic": "",
						"closeQos": "0",
						"closePayload": "",
						"willTopic": "",
						"willQos": "0",
						"willPayload": ""
					}]
