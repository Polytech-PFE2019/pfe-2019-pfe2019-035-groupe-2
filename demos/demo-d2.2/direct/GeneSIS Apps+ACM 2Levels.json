{
    "dm": {
        "name": "demo",
        "components": [{
                "_type": "/internal/node_red",
                "name": "Node-RED",
                "properties": [],
                "id": "5f84f73b-244b-4ee2-aaee-0bda2920b9a8",
                "provided_execution_port": [{
                        "name": "f5657b0e-3270-4d0c-8486-a918e0d96b49"
                    }
                ],
                "docker_resource": {
                    "name": "51040341-7c19-4884-a4ff-a2969d0055fb",
                    "image": "nicolasferry/multiarch-node-red-thingml:latest",
                    "command": "",
                    "links": [],
                    "port_bindings": {
                        "1880": "1880"
                    },
                    "devices": {
                        "PathOnHost": "",
                        "PathInContainer": "",
                        "CgroupPermissions": "rwm"
                    }
                },
                "ssh_resource": {
                    "name": "367f8a16-d61a-4870-bd9f-e4c6845840df",
                    "startCommand": "",
                    "downloadCommand": "",
                    "installCommand": "",
                    "configureCommand": "",
                    "credentials": {
                        "username": "ubuntu",
                        "password": "ubuntu",
                        "sshkey": ""
                    }
                },
                "ansible_resource": {
                    "name": "3e7ac7da-9129-4263-a2cf-e0e7d34ee52f",
                    "playbook_path": "",
                    "playbook_host": "",
                    "credentials": {
                        "username": "ubuntu",
                        "password": "ubuntu",
                        "sshkey": ""
                    }
                },
                "required_execution_port": {
                    "name": "demandDocker",
                    "needDeployer": false
                },
                "provided_communication_port": [{
                        "name": "690a34ad-9cc2-452b-8d31-9851ac95ab98",
                        "port_number": "1880"
                    }
                ],
                "required_communication_port": [{
                        "name": "9dae59fa-be42-4c67-82cf-221a1e4fd9fe",
                        "port_number": "80",
                        "isMandatory": false
                    }
                ],
                "nr_flow": [{
                        "id": "4cbff363.4f76ec",
                        "type": "ui_switch",
                        "z": "eb5350e0.dfc88",
                        "name": "TV",
                        "label": "TV",
                        "tooltip": "",
                        "group": "66b18204.aed36c",
                        "order": 2,
                        "width": 0,
                        "height": 0,
                        "passthru": true,
                        "decouple": "false",
                        "topic": "tv",
                        "style": "",
                        "onvalue": "true",
                        "onvalueType": "bool",
                        "onicon": "",
                        "oncolor": "",
                        "offvalue": "false",
                        "offvalueType": "bool",
                        "officon": "",
                        "offcolor": "",
                        "x": 280,
                        "y": 130,
                        "wires": [["fffc8467.3141a8"]]
                    }, {
                        "id": "6825bc65.822434",
                        "type": "ui_switch",
                        "z": "eb5350e0.dfc88",
                        "name": "Presence",
                        "label": "Presence",
                        "tooltip": "",
                        "group": "66b18204.aed36c",
                        "order": 3,
                        "width": 0,
                        "height": 0,
                        "passthru": true,
                        "decouple": "false",
                        "topic": "presence",
                        "style": "",
                        "onvalue": "true",
                        "onvalueType": "bool",
                        "onicon": "",
                        "oncolor": "",
                        "offvalue": "false",
                        "offvalueType": "bool",
                        "officon": "",
                        "offcolor": "",
                        "x": 290,
                        "y": 50,
                        "wires": [["4c396f9d.99c3dc-tag-6825bc65.822434"]]
                    }, {
                        "id": "fffc8467.3141a8",
                        "type": "Invert",
                        "z": "eb5350e0.dfc88",
                        "name": "Invert",
                        "x": 420,
                        "y": 130,
                        "wires": [["4c396f9d.99c3dc-tag-fffc8467.3141a8"]]
                    }, {
                        "id": "33c0fffb.1045e",
                        "type": "ui_switch",
                        "z": "eb5350e0.dfc88",
                        "name": "",
                        "label": "Light",
                        "tooltip": "",
                        "group": "66b18204.aed36c",
                        "order": 0,
                        "width": 0,
                        "height": 0,
                        "passthru": true,
                        "decouple": "false",
                        "topic": "",
                        "style": "",
                        "onvalue": "true",
                        "onvalueType": "bool",
                        "onicon": "",
                        "oncolor": "",
                        "offvalue": "false",
                        "offvalueType": "bool",
                        "officon": "",
                        "offcolor": "",
                        "x": 1010,
                        "y": 80,
                        "wires": [[]]
                    }, {
                        "id": "542a094f.318c48",
                        "type": "inject",
                        "z": "eb5350e0.dfc88",
                        "name": "",
                        "topic": "",
                        "payload": "true",
                        "payloadType": "bool",
                        "repeat": "1",
                        "crontab": "",
                        "once": false,
                        "onceDelay": 0.1,
                        "x": 120,
                        "y": 50,
                        "wires": [["6825bc65.822434"]]
                    }, {
                        "id": "6a48c3cd.23f50c",
                        "type": "inject",
                        "z": "eb5350e0.dfc88",
                        "name": "",
                        "topic": "",
                        "payload": "true",
                        "payloadType": "bool",
                        "repeat": "1",
                        "crontab": "",
                        "once": false,
                        "onceDelay": 0.1,
                        "x": 120,
                        "y": 130,
                        "wires": [["4cbff363.4f76ec"]]
                    }, {
                        "id": "4c396f9d.99c3dc",
                        "type": "acm",
                        "z": "eb5350e0.dfc88",
                        "name": "ACM 0",
                        "strategy": "{\"class\":\"Logic\",\"codeTemplate\":\"{\\\"name\\\":\\\"ACM Logic AND\\\", \\\"type\\\":\\\"function\\\", \\\"func\\\":\\\"var ret = true;\\\\nfor(var index in msg.payload){ret=ret&&(msg.payload[index]||false);}\\\\nmsg.payload=ret;\\\\nreturn msg;\\\"}\",\"description\":\"Logic AND between inputs\",\"id\":\"fc1726ae-6a2f-4039-b51e-fef2c18d4a5a\",\"metadata\":\"<owl></owl>\",\"name\":\"AND\",\"type\":\"node-red\"}",
                        "x": 890,
                        "y": 80,
                        "wires": [["33c0fffb.1045e"]]
                    }, {
                        "id": "4c396f9d.99c3dc_sync",
                        "type": "acm-sync",
                        "z": "eb5350e0.dfc88",
                        "name": "ACM Sync 4c396f9d.99c3dc",
                        "payload": "[\"6825bc65.822434\",\"fffc8467.3141a8\"]",
                        "delay": 1000,
                        "conflictID": "4c396f9d.99c3dc_sync",
                        "brokerAddress": "mqtt://localhost:1883",
                        "x": 700,
                        "y": 80,
                        "wires": [["4c396f9d.99c3dc"]]
                    }, {
                        "id": "4c396f9d.99c3dc-tag-6825bc65.822434",
                        "type": "acm-tag",
                        "z": "eb5350e0.dfc88",
                        "name": "ACM tag 6825bc65.822434",
                        "tag": "6825bc65.822434",
                        "x": 500,
                        "y": 40,
                        "wires": [["4c396f9d.99c3dc_sync"]]
                    }, {
                        "id": "4c396f9d.99c3dc-tag-fffc8467.3141a8",
                        "type": "acm-tag",
                        "z": "eb5350e0.dfc88",
                        "name": "ACM tag fffc8467.3141a8",
                        "tag": "fffc8467.3141a8",
                        "x": 670,
                        "y": 140,
                        "wires": [["4c396f9d.99c3dc_sync"]]
                    }, {
                        "id": "66b18204.aed36c",
                        "type": "ui_group",
                        "z": "",
                        "name": "ACM",
                        "tab": "e71b743f.70e818",
                        "disp": true,
                        "width": "6",
                        "collapse": false
                    }, {
                        "id": "e71b743f.70e818",
                        "type": "ui_tab",
                        "z": "",
                        "name": "Living Room",
                        "icon": "dashboard",
                        "order": 1,
                        "disabled": false,
                        "hidden": false
                    }
                ],
                "path_flow": "",
                "packages": ["node-red-contrib-boolean-logic", "node-red-dashboard", "enact-actuation-conflict-manager-node"]
            }, {
                "_type": "/infra/docker_host",
                "name": "My-Machine",
                "properties": [],
                "id": "ac06417b-2faa-4279-a40d-3b28ffc6136b",
                "provided_execution_port": [{
                        "name": "offerDocker"
                    }
                ],
                "ip": "192.168.99.100",
                "port": ["2376"],
                "credentials": {
                    "username": "ubuntu",
                    "password": "ubuntu",
                    "sshkey": ""
                },
                "monitoring_agent": "none"
            }
        ],
        "links": [],
        "containments": [{
                "name": "Docker_on_MyMachine",
                "properties": [],
                "src": "/My-Machine/offerDocker",
                "target": "/Node-RED/demandDocker"
            }
        ],
        "type_registry": []
    },
    "graph": {
        "elements": {
            "nodes": [{
                    "data": {
                        "id": "My-Machine"
                    },
                    "position": {
                        "x": 207,
                        "y": 171
                    },
                    "group": "nodes",
                    "removed": false,
                    "selected": false,
                    "selectable": true,
                    "locked": false,
                    "grabbable": true,
                    "classes": "container"
                }, {
                    "data": {
                        "id": "Node-RED",
                        "parent": "My-Machine"
                    },
                    "position": {
                        "x": 207,
                        "y": 171
                    },
                    "group": "nodes",
                    "removed": false,
                    "selected": false,
                    "selectable": true,
                    "locked": false,
                    "grabbable": true,
                    "classes": "node_red"
                }
            ]
        },
        "style": [{
                "selector": "node",
                "style": {
                    "label": "data(id)",
                    "background-fit": "contain",
                    "background-image-opacity": "0.3",
                    "text-valign": "center",
                    "text-halign": "center",
                    "font-size": "4px",
                    "font-weight": "bold"
                }
            }, {
                "selector": "node.container",
                "style": {
                    "padding": "10px",
                    "text-valign": "top",
                    "text-halign": "center",
                    "background-color": "#DDD",
                    "font-size": "8px",
                    "font-weight": "normal",
                    "shape": "rectangle",
                    "background-image": "./img/docker-official.svg"
                }
            }, {
                "selector": "edge",
                "style": {
                    "curve-style": "bezier",
                    "target-arrow-shape": "triangle"
                }
            }, {
                "selector": "edge.control",
                "style": {
                    "curve-style": "bezier",
                    "target-arrow-shape": "circle"
                }
            }, {
                "selector": ":selected",
                "style": {
                    "background-color": "black",
                    "line-color": "black",
                    "target-arrow-color": "black",
                    "source-arrow-color": "black"
                }
            }, {
                "selector": "node.questionable",
                "style": {
                    "border-color": "#A33",
                    "background-color": "#B55",
                    "shape": "roundrectangle"
                }
            }, {
                "selector": "node.node_red",
                "style": {
                    "background-image": "./img/node-red-256.png"
                }
            }, {
                "selector": "node.ansible",
                "style": {
                    "background-image": "./img/ansible.png"
                }
            }, {
                "selector": "node.orion",
                "style": {
                    "background-color": "#ADD8E6",
                    "background-image": "./img/fiware_logo.png"
                }
            }, {
                "selector": "node.thingml",
                "style": {
                    "background-color": "#ADD8E6",
                    "background-image": "./img/thingml_short.png"
                }
            }, {
                "selector": "node.device",
                "style": {
                    "padding": "10px",
                    "text-valign": "top",
                    "text-halign": "center",
                    "background-color": "#DDD",
                    "font-size": "8px",
                    "font-weight": "normal",
                    "shape": "rectangle",
                    "background-image": "./img/device.png"
                }
            }, {
                "selector": "node.vm",
                "style": {
                    "padding": "10px",
                    "text-valign": "top",
                    "text-halign": "center",
                    "background-color": "#DDD",
                    "font-size": "8px",
                    "font-weight": "normal",
                    "shape": "rectangle",
                    "background-image": "./img/server_cloud.png"
                }
            }
        ],
        "zoomingEnabled": true,
        "userZoomingEnabled": true,
        "zoom": 6,
        "minZoom": 0.4,
        "maxZoom": 6,
        "panningEnabled": true,
        "userPanningEnabled": true,
        "pan": {
            "x": -895.0426483154297,
            "y": -800.0852584838867
        },
        "boxSelectionEnabled": false,
        "renderer": {
            "name": "canvas"
        }
    }
}
